# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'eric\Preferences\ConfigurationPages\EditorFilePage.ui'
#
# Created: Fri Apr 18 09:56:42 2014
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_EditorFilePage(object):
    def setupUi(self, EditorFilePage):
        EditorFilePage.setObjectName(_fromUtf8("EditorFilePage"))
        EditorFilePage.resize(547, 976)
        self.verticalLayout_2 = QtGui.QVBoxLayout(EditorFilePage)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.headerLabel = QtGui.QLabel(EditorFilePage)
        self.headerLabel.setObjectName(_fromUtf8("headerLabel"))
        self.verticalLayout_2.addWidget(self.headerLabel)
        self.line2 = QtGui.QFrame(EditorFilePage)
        self.line2.setFrameShape(QtGui.QFrame.HLine)
        self.line2.setFrameShadow(QtGui.QFrame.Sunken)
        self.line2.setFrameShape(QtGui.QFrame.HLine)
        self.line2.setFrameShadow(QtGui.QFrame.Sunken)
        self.line2.setObjectName(_fromUtf8("line2"))
        self.verticalLayout_2.addWidget(self.line2)
        self.groupBox_3 = QtGui.QGroupBox(EditorFilePage)
        self.groupBox_3.setObjectName(_fromUtf8("groupBox_3"))
        self.vboxlayout = QtGui.QVBoxLayout(self.groupBox_3)
        self.vboxlayout.setObjectName(_fromUtf8("vboxlayout"))
        self.hboxlayout = QtGui.QHBoxLayout()
        self.hboxlayout.setObjectName(_fromUtf8("hboxlayout"))
        self.clearBreakpointsCheckBox = QtGui.QCheckBox(self.groupBox_3)
        self.clearBreakpointsCheckBox.setObjectName(_fromUtf8("clearBreakpointsCheckBox"))
        self.hboxlayout.addWidget(self.clearBreakpointsCheckBox)
        self.automaticReopenCheckBox = QtGui.QCheckBox(self.groupBox_3)
        self.automaticReopenCheckBox.setObjectName(_fromUtf8("automaticReopenCheckBox"))
        self.hboxlayout.addWidget(self.automaticReopenCheckBox)
        self.vboxlayout.addLayout(self.hboxlayout)
        self.hboxlayout1 = QtGui.QHBoxLayout()
        self.hboxlayout1.setObjectName(_fromUtf8("hboxlayout1"))
        self.label = QtGui.QLabel(self.groupBox_3)
        self.label.setObjectName(_fromUtf8("label"))
        self.hboxlayout1.addWidget(self.label)
        self.warnFilesizeSpinBox = QtGui.QSpinBox(self.groupBox_3)
        self.warnFilesizeSpinBox.setMinimum(1)
        self.warnFilesizeSpinBox.setMaximum(16384)
        self.warnFilesizeSpinBox.setSingleStep(16)
        self.warnFilesizeSpinBox.setProperty("value", 1024)
        self.warnFilesizeSpinBox.setObjectName(_fromUtf8("warnFilesizeSpinBox"))
        self.hboxlayout1.addWidget(self.warnFilesizeSpinBox)
        spacerItem = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.hboxlayout1.addItem(spacerItem)
        self.vboxlayout.addLayout(self.hboxlayout1)
        self.verticalLayout_2.addWidget(self.groupBox_3)
        self.groupBox_5 = QtGui.QGroupBox(EditorFilePage)
        self.groupBox_5.setObjectName(_fromUtf8("groupBox_5"))
        self.verticalLayout = QtGui.QVBoxLayout(self.groupBox_5)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.groupBox_8 = QtGui.QGroupBox(self.groupBox_5)
        self.groupBox_8.setObjectName(_fromUtf8("groupBox_8"))
        self._12 = QtGui.QHBoxLayout(self.groupBox_8)
        self._12.setObjectName(_fromUtf8("_12"))
        self.lfRadioButton = QtGui.QRadioButton(self.groupBox_8)
        self.lfRadioButton.setObjectName(_fromUtf8("lfRadioButton"))
        self._12.addWidget(self.lfRadioButton)
        self.crRadioButton = QtGui.QRadioButton(self.groupBox_8)
        self.crRadioButton.setObjectName(_fromUtf8("crRadioButton"))
        self._12.addWidget(self.crRadioButton)
        self.crlfRadioButton = QtGui.QRadioButton(self.groupBox_8)
        self.crlfRadioButton.setObjectName(_fromUtf8("crlfRadioButton"))
        self._12.addWidget(self.crlfRadioButton)
        self.verticalLayout.addWidget(self.groupBox_8)
        self.automaticEolConversionCheckBox = QtGui.QCheckBox(self.groupBox_5)
        self.automaticEolConversionCheckBox.setObjectName(_fromUtf8("automaticEolConversionCheckBox"))
        self.verticalLayout.addWidget(self.automaticEolConversionCheckBox)
        self.verticalLayout_2.addWidget(self.groupBox_5)
        self.groupBox_4 = QtGui.QGroupBox(EditorFilePage)
        self.groupBox_4.setObjectName(_fromUtf8("groupBox_4"))
        self.vboxlayout1 = QtGui.QVBoxLayout(self.groupBox_4)
        self.vboxlayout1.setObjectName(_fromUtf8("vboxlayout1"))
        self.gridlayout = QtGui.QGridLayout()
        self.gridlayout.setObjectName(_fromUtf8("gridlayout"))
        self.automaticSyntaxCheckCheckBox = QtGui.QCheckBox(self.groupBox_4)
        self.automaticSyntaxCheckCheckBox.setObjectName(_fromUtf8("automaticSyntaxCheckCheckBox"))
        self.gridlayout.addWidget(self.automaticSyntaxCheckCheckBox, 0, 0, 1, 1)
        self.stripWhitespaceCheckBox = QtGui.QCheckBox(self.groupBox_4)
        self.stripWhitespaceCheckBox.setObjectName(_fromUtf8("stripWhitespaceCheckBox"))
        self.gridlayout.addWidget(self.stripWhitespaceCheckBox, 0, 1, 1, 1)
        self.createBackupFileCheckBox = QtGui.QCheckBox(self.groupBox_4)
        self.createBackupFileCheckBox.setObjectName(_fromUtf8("createBackupFileCheckBox"))
        self.gridlayout.addWidget(self.createBackupFileCheckBox, 1, 0, 1, 1)
        self.vboxlayout1.addLayout(self.gridlayout)
        self.hboxlayout2 = QtGui.QHBoxLayout()
        self.hboxlayout2.setObjectName(_fromUtf8("hboxlayout2"))
        self.TextLabel13_3_3 = QtGui.QLabel(self.groupBox_4)
        self.TextLabel13_3_3.setObjectName(_fromUtf8("TextLabel13_3_3"))
        self.hboxlayout2.addWidget(self.TextLabel13_3_3)
        self.autosaveSlider = QtGui.QSlider(self.groupBox_4)
        self.autosaveSlider.setMinimum(0)
        self.autosaveSlider.setMaximum(30)
        self.autosaveSlider.setProperty("value", 5)
        self.autosaveSlider.setOrientation(QtCore.Qt.Horizontal)
        self.autosaveSlider.setTickInterval(1)
        self.autosaveSlider.setObjectName(_fromUtf8("autosaveSlider"))
        self.hboxlayout2.addWidget(self.autosaveSlider)
        self.autosaveLCD = QtGui.QLCDNumber(self.groupBox_4)
        self.autosaveLCD.setDigitCount(2)
        self.autosaveLCD.setSegmentStyle(QtGui.QLCDNumber.Flat)
        self.autosaveLCD.setProperty("value", 5.0)
        self.autosaveLCD.setObjectName(_fromUtf8("autosaveLCD"))
        self.hboxlayout2.addWidget(self.autosaveLCD)
        self.vboxlayout1.addLayout(self.hboxlayout2)
        self.verticalLayout_2.addWidget(self.groupBox_4)
        self.groupBox = QtGui.QGroupBox(EditorFilePage)
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.gridLayout = QtGui.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.advEncodingCheckBox = QtGui.QCheckBox(self.groupBox)
        self.advEncodingCheckBox.setObjectName(_fromUtf8("advEncodingCheckBox"))
        self.gridLayout.addWidget(self.advEncodingCheckBox, 0, 0, 1, 2)
        self.label_4 = QtGui.QLabel(self.groupBox)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.gridLayout.addWidget(self.label_4, 1, 0, 1, 1)
        self.defaultEncodingComboBox = QtGui.QComboBox(self.groupBox)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.defaultEncodingComboBox.sizePolicy().hasHeightForWidth())
        self.defaultEncodingComboBox.setSizePolicy(sizePolicy)
        self.defaultEncodingComboBox.setObjectName(_fromUtf8("defaultEncodingComboBox"))
        self.gridLayout.addWidget(self.defaultEncodingComboBox, 1, 1, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.groupBox_2 = QtGui.QGroupBox(EditorFilePage)
        self.groupBox_2.setObjectName(_fromUtf8("groupBox_2"))
        self.gridlayout1 = QtGui.QGridLayout(self.groupBox_2)
        self.gridlayout1.setObjectName(_fromUtf8("gridlayout1"))
        self.label_2 = QtGui.QLabel(self.groupBox_2)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.gridlayout1.addWidget(self.label_2, 0, 0, 1, 1)
        self.openFilesFilterComboBox = QtGui.QComboBox(self.groupBox_2)
        self.openFilesFilterComboBox.setObjectName(_fromUtf8("openFilesFilterComboBox"))
        self.gridlayout1.addWidget(self.openFilesFilterComboBox, 0, 1, 1, 1)
        spacerItem1 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.gridlayout1.addItem(spacerItem1, 0, 2, 1, 1)
        self.label_3 = QtGui.QLabel(self.groupBox_2)
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.gridlayout1.addWidget(self.label_3, 1, 0, 1, 1)
        self.saveFilesFilterComboBox = QtGui.QComboBox(self.groupBox_2)
        self.saveFilesFilterComboBox.setObjectName(_fromUtf8("saveFilesFilterComboBox"))
        self.gridlayout1.addWidget(self.saveFilesFilterComboBox, 1, 1, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox_2)
        self.groupBox_6 = QtGui.QGroupBox(EditorFilePage)
        self.groupBox_6.setObjectName(_fromUtf8("groupBox_6"))
        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox_6)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.label_5 = QtGui.QLabel(self.groupBox_6)
        self.label_5.setWordWrap(True)
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.gridLayout_2.addWidget(self.label_5, 0, 0, 1, 2)
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.openFiltersButton = QtGui.QRadioButton(self.groupBox_6)
        self.openFiltersButton.setChecked(True)
        self.openFiltersButton.setObjectName(_fromUtf8("openFiltersButton"))
        self.horizontalLayout.addWidget(self.openFiltersButton)
        self.savFiltersButton = QtGui.QRadioButton(self.groupBox_6)
        self.savFiltersButton.setObjectName(_fromUtf8("savFiltersButton"))
        self.horizontalLayout.addWidget(self.savFiltersButton)
        self.gridLayout_2.addLayout(self.horizontalLayout, 1, 0, 1, 2)
        self.fileFiltersList = QtGui.QListWidget(self.groupBox_6)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fileFiltersList.sizePolicy().hasHeightForWidth())
        self.fileFiltersList.setSizePolicy(sizePolicy)
        self.fileFiltersList.setMinimumSize(QtCore.QSize(0, 200))
        self.fileFiltersList.setAlternatingRowColors(True)
        self.fileFiltersList.setObjectName(_fromUtf8("fileFiltersList"))
        self.gridLayout_2.addWidget(self.fileFiltersList, 2, 0, 4, 1)
        self.addFileFilterButton = QtGui.QPushButton(self.groupBox_6)
        self.addFileFilterButton.setObjectName(_fromUtf8("addFileFilterButton"))
        self.gridLayout_2.addWidget(self.addFileFilterButton, 2, 1, 1, 1)
        self.editFileFilterButton = QtGui.QPushButton(self.groupBox_6)
        self.editFileFilterButton.setEnabled(False)
        self.editFileFilterButton.setObjectName(_fromUtf8("editFileFilterButton"))
        self.gridLayout_2.addWidget(self.editFileFilterButton, 3, 1, 1, 1)
        self.deleteFileFilterButton = QtGui.QPushButton(self.groupBox_6)
        self.deleteFileFilterButton.setEnabled(False)
        self.deleteFileFilterButton.setObjectName(_fromUtf8("deleteFileFilterButton"))
        self.gridLayout_2.addWidget(self.deleteFileFilterButton, 4, 1, 1, 1)
        spacerItem2 = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem2, 5, 1, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox_6)
        spacerItem3 = QtGui.QSpacerItem(435, 20, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem3)

        self.retranslateUi(EditorFilePage)
        QtCore.QObject.connect(self.autosaveSlider, QtCore.SIGNAL(_fromUtf8("valueChanged(int)")), self.autosaveLCD.display)
        QtCore.QMetaObject.connectSlotsByName(EditorFilePage)
        EditorFilePage.setTabOrder(self.clearBreakpointsCheckBox, self.automaticReopenCheckBox)
        EditorFilePage.setTabOrder(self.automaticReopenCheckBox, self.warnFilesizeSpinBox)
        EditorFilePage.setTabOrder(self.warnFilesizeSpinBox, self.lfRadioButton)
        EditorFilePage.setTabOrder(self.lfRadioButton, self.crRadioButton)
        EditorFilePage.setTabOrder(self.crRadioButton, self.crlfRadioButton)
        EditorFilePage.setTabOrder(self.crlfRadioButton, self.automaticEolConversionCheckBox)
        EditorFilePage.setTabOrder(self.automaticEolConversionCheckBox, self.automaticSyntaxCheckCheckBox)
        EditorFilePage.setTabOrder(self.automaticSyntaxCheckCheckBox, self.createBackupFileCheckBox)
        EditorFilePage.setTabOrder(self.createBackupFileCheckBox, self.stripWhitespaceCheckBox)
        EditorFilePage.setTabOrder(self.stripWhitespaceCheckBox, self.autosaveSlider)
        EditorFilePage.setTabOrder(self.autosaveSlider, self.advEncodingCheckBox)
        EditorFilePage.setTabOrder(self.advEncodingCheckBox, self.defaultEncodingComboBox)
        EditorFilePage.setTabOrder(self.defaultEncodingComboBox, self.openFilesFilterComboBox)
        EditorFilePage.setTabOrder(self.openFilesFilterComboBox, self.saveFilesFilterComboBox)
        EditorFilePage.setTabOrder(self.saveFilesFilterComboBox, self.openFiltersButton)
        EditorFilePage.setTabOrder(self.openFiltersButton, self.savFiltersButton)
        EditorFilePage.setTabOrder(self.savFiltersButton, self.fileFiltersList)
        EditorFilePage.setTabOrder(self.fileFiltersList, self.addFileFilterButton)
        EditorFilePage.setTabOrder(self.addFileFilterButton, self.editFileFilterButton)
        EditorFilePage.setTabOrder(self.editFileFilterButton, self.deleteFileFilterButton)

    def retranslateUi(self, EditorFilePage):
        self.headerLabel.setText(_translate("EditorFilePage", "<b>Configure file handling settings</b>", None))
        self.groupBox_3.setTitle(_translate("EditorFilePage", "Open && Close", None))
        self.clearBreakpointsCheckBox.setToolTip(_translate("EditorFilePage", "Select, whether breakpoint belonging to an editor should be cleared, when the editor is closed", None))
        self.clearBreakpointsCheckBox.setText(_translate("EditorFilePage", "Clear Breakpoints upon closing", None))
        self.automaticReopenCheckBox.setToolTip(_translate("EditorFilePage", "Select to reread the file automatically, if it was changed externally", None))
        self.automaticReopenCheckBox.setText(_translate("EditorFilePage", "Reread automatically when changed externally", None))
        self.label.setText(_translate("EditorFilePage", "Warn, if file is greater than", None))
        self.warnFilesizeSpinBox.setToolTip(_translate("EditorFilePage", "Enter the filesize, a warning dialog should be shown.", None))
        self.warnFilesizeSpinBox.setSuffix(_translate("EditorFilePage", " KB", None))
        self.groupBox_5.setTitle(_translate("EditorFilePage", "End of Line", None))
        self.groupBox_8.setTitle(_translate("EditorFilePage", "End of Line Characters", None))
        self.lfRadioButton.setToolTip(_translate("EditorFilePage", "Select Unix type end of line", None))
        self.lfRadioButton.setText(_translate("EditorFilePage", "Unix", None))
        self.crRadioButton.setToolTip(_translate("EditorFilePage", "Select Macintosh type end of line", None))
        self.crRadioButton.setText(_translate("EditorFilePage", "Macintosh", None))
        self.crlfRadioButton.setToolTip(_translate("EditorFilePage", "Select Windows type end of line", None))
        self.crlfRadioButton.setText(_translate("EditorFilePage", "Windows/DOS", None))
        self.automaticEolConversionCheckBox.setToolTip(_translate("EditorFilePage", "Select whether the eol type should be converted upon opening the file.", None))
        self.automaticEolConversionCheckBox.setText(_translate("EditorFilePage", "Automatic End of Line Conversion", None))
        self.groupBox_4.setTitle(_translate("EditorFilePage", "Save", None))
        self.automaticSyntaxCheckCheckBox.setToolTip(_translate("EditorFilePage", "Select, whether Python files should be checked automatically for syntax errors", None))
        self.automaticSyntaxCheckCheckBox.setText(_translate("EditorFilePage", "Automatic Syntax Check", None))
        self.stripWhitespaceCheckBox.setToolTip(_translate("EditorFilePage", "Select, whether trailing whitespace should be removed upon save", None))
        self.stripWhitespaceCheckBox.setText(_translate("EditorFilePage", "Strip trailing whitespace upon save", None))
        self.createBackupFileCheckBox.setToolTip(_translate("EditorFilePage", "Select, whether a backup file shall be generated upon save", None))
        self.createBackupFileCheckBox.setText(_translate("EditorFilePage", "Create backup file upon save", None))
        self.TextLabel13_3_3.setText(_translate("EditorFilePage", "Autosave interval:", None))
        self.autosaveSlider.setToolTip(_translate("EditorFilePage", "Move to set the autosave interval in minutes (0 to disable)", None))
        self.autosaveLCD.setToolTip(_translate("EditorFilePage", "Displays the selected autosave interval.", None))
        self.groupBox.setTitle(_translate("EditorFilePage", "Encoding", None))
        self.advEncodingCheckBox.setToolTip(_translate("EditorFilePage", "Select to use the advanced encoding detection ", None))
        self.advEncodingCheckBox.setWhatsThis(_translate("EditorFilePage", "<b>Advanced encoding detection</b>\n"
"<p>Select to use the advanced encoding detection based on the &quot;universal character encoding detector&quot; from <a href=\"http://chardet.feedparser.org\">http://chardet.feedparser.org</a>.</p>", None))
        self.advEncodingCheckBox.setText(_translate("EditorFilePage", "Use advanced encoding detection", None))
        self.label_4.setText(_translate("EditorFilePage", "Default Encoding:", None))
        self.defaultEncodingComboBox.setToolTip(_translate("EditorFilePage", "Select the string encoding to be used.", None))
        self.groupBox_2.setTitle(_translate("EditorFilePage", "Default File Filters", None))
        self.label_2.setText(_translate("EditorFilePage", "Open Files:", None))
        self.label_3.setText(_translate("EditorFilePage", "Save Files:", None))
        self.groupBox_6.setTitle(_translate("EditorFilePage", "Additional File Filters", None))
        self.label_5.setText(_translate("EditorFilePage", "<b>Note:</b> Save file filters must contain one wildcard pattern only.", None))
        self.openFiltersButton.setToolTip(_translate("EditorFilePage", "Select to edit the open file filters", None))
        self.openFiltersButton.setText(_translate("EditorFilePage", "Open Files", None))
        self.savFiltersButton.setToolTip(_translate("EditorFilePage", "Select to edit the save file filters", None))
        self.savFiltersButton.setText(_translate("EditorFilePage", "Save Files", None))
        self.fileFiltersList.setSortingEnabled(True)
        self.addFileFilterButton.setText(_translate("EditorFilePage", "Add...", None))
        self.editFileFilterButton.setText(_translate("EditorFilePage", "Edit...", None))
        self.deleteFileFilterButton.setText(_translate("EditorFilePage", "Delete", None))

