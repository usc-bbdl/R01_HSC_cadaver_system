# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'eric\Plugins\VcsPlugins\vcsPySvn\SvnLogBrowserDialog.ui'
#
# Created: Fri Apr 18 09:56:42 2014
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_SvnLogBrowserDialog(object):
    def setupUi(self, SvnLogBrowserDialog):
        SvnLogBrowserDialog.setObjectName(_fromUtf8("SvnLogBrowserDialog"))
        SvnLogBrowserDialog.resize(700, 600)
        SvnLogBrowserDialog.setSizeGripEnabled(True)
        self.vboxlayout = QtGui.QVBoxLayout(SvnLogBrowserDialog)
        self.vboxlayout.setObjectName(_fromUtf8("vboxlayout"))
        self.hboxlayout = QtGui.QHBoxLayout()
        self.hboxlayout.setObjectName(_fromUtf8("hboxlayout"))
        self.label = QtGui.QLabel(SvnLogBrowserDialog)
        self.label.setObjectName(_fromUtf8("label"))
        self.hboxlayout.addWidget(self.label)
        self.fromDate = QtGui.QDateEdit(SvnLogBrowserDialog)
        self.fromDate.setCalendarPopup(True)
        self.fromDate.setObjectName(_fromUtf8("fromDate"))
        self.hboxlayout.addWidget(self.fromDate)
        self.label_2 = QtGui.QLabel(SvnLogBrowserDialog)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.hboxlayout.addWidget(self.label_2)
        self.toDate = QtGui.QDateEdit(SvnLogBrowserDialog)
        self.toDate.setCalendarPopup(True)
        self.toDate.setObjectName(_fromUtf8("toDate"))
        self.hboxlayout.addWidget(self.toDate)
        self.fieldCombo = QtGui.QComboBox(SvnLogBrowserDialog)
        self.fieldCombo.setObjectName(_fromUtf8("fieldCombo"))
        self.fieldCombo.addItem(_fromUtf8(""))
        self.fieldCombo.addItem(_fromUtf8(""))
        self.fieldCombo.addItem(_fromUtf8(""))
        self.hboxlayout.addWidget(self.fieldCombo)
        self.rxEdit = QtGui.QLineEdit(SvnLogBrowserDialog)
        self.rxEdit.setObjectName(_fromUtf8("rxEdit"))
        self.hboxlayout.addWidget(self.rxEdit)
        self.clearRxEditButton = QtGui.QToolButton(SvnLogBrowserDialog)
        self.clearRxEditButton.setText(_fromUtf8(""))
        self.clearRxEditButton.setObjectName(_fromUtf8("clearRxEditButton"))
        self.hboxlayout.addWidget(self.clearRxEditButton)
        self.vboxlayout.addLayout(self.hboxlayout)
        self.logTree = QtGui.QTreeWidget(SvnLogBrowserDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.logTree.sizePolicy().hasHeightForWidth())
        self.logTree.setSizePolicy(sizePolicy)
        self.logTree.setAlternatingRowColors(True)
        self.logTree.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
        self.logTree.setRootIsDecorated(False)
        self.logTree.setItemsExpandable(False)
        self.logTree.setAllColumnsShowFocus(True)
        self.logTree.setObjectName(_fromUtf8("logTree"))
        self.vboxlayout.addWidget(self.logTree)
        self.messageEdit = QtGui.QTextEdit(SvnLogBrowserDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.messageEdit.sizePolicy().hasHeightForWidth())
        self.messageEdit.setSizePolicy(sizePolicy)
        self.messageEdit.setReadOnly(True)
        self.messageEdit.setObjectName(_fromUtf8("messageEdit"))
        self.vboxlayout.addWidget(self.messageEdit)
        self.filesTree = QtGui.QTreeWidget(SvnLogBrowserDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(self.filesTree.sizePolicy().hasHeightForWidth())
        self.filesTree.setSizePolicy(sizePolicy)
        self.filesTree.setAlternatingRowColors(True)
        self.filesTree.setRootIsDecorated(False)
        self.filesTree.setItemsExpandable(False)
        self.filesTree.setAllColumnsShowFocus(True)
        self.filesTree.setObjectName(_fromUtf8("filesTree"))
        self.vboxlayout.addWidget(self.filesTree)
        self.hboxlayout1 = QtGui.QHBoxLayout()
        self.hboxlayout1.setObjectName(_fromUtf8("hboxlayout1"))
        self.nextButton = QtGui.QPushButton(SvnLogBrowserDialog)
        self.nextButton.setObjectName(_fromUtf8("nextButton"))
        self.hboxlayout1.addWidget(self.nextButton)
        self.limitSpinBox = QtGui.QSpinBox(SvnLogBrowserDialog)
        self.limitSpinBox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.limitSpinBox.setMinimum(1)
        self.limitSpinBox.setMaximum(10000)
        self.limitSpinBox.setProperty("value", 100)
        self.limitSpinBox.setObjectName(_fromUtf8("limitSpinBox"))
        self.hboxlayout1.addWidget(self.limitSpinBox)
        self.stopCheckBox = QtGui.QCheckBox(SvnLogBrowserDialog)
        self.stopCheckBox.setObjectName(_fromUtf8("stopCheckBox"))
        self.hboxlayout1.addWidget(self.stopCheckBox)
        self.line = QtGui.QFrame(SvnLogBrowserDialog)
        self.line.setFrameShape(QtGui.QFrame.VLine)
        self.line.setFrameShadow(QtGui.QFrame.Sunken)
        self.line.setObjectName(_fromUtf8("line"))
        self.hboxlayout1.addWidget(self.line)
        self.diffPreviousButton = QtGui.QPushButton(SvnLogBrowserDialog)
        self.diffPreviousButton.setObjectName(_fromUtf8("diffPreviousButton"))
        self.hboxlayout1.addWidget(self.diffPreviousButton)
        self.diffRevisionsButton = QtGui.QPushButton(SvnLogBrowserDialog)
        self.diffRevisionsButton.setObjectName(_fromUtf8("diffRevisionsButton"))
        self.hboxlayout1.addWidget(self.diffRevisionsButton)
        spacerItem = QtGui.QSpacerItem(91, 29, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.hboxlayout1.addItem(spacerItem)
        self.vboxlayout.addLayout(self.hboxlayout1)
        self.buttonBox = QtGui.QDialogButtonBox(SvnLogBrowserDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtGui.QDialogButtonBox.Cancel|QtGui.QDialogButtonBox.Close)
        self.buttonBox.setObjectName(_fromUtf8("buttonBox"))
        self.vboxlayout.addWidget(self.buttonBox)

        self.retranslateUi(SvnLogBrowserDialog)
        QtCore.QMetaObject.connectSlotsByName(SvnLogBrowserDialog)
        SvnLogBrowserDialog.setTabOrder(self.fromDate, self.toDate)
        SvnLogBrowserDialog.setTabOrder(self.toDate, self.fieldCombo)
        SvnLogBrowserDialog.setTabOrder(self.fieldCombo, self.rxEdit)
        SvnLogBrowserDialog.setTabOrder(self.rxEdit, self.logTree)
        SvnLogBrowserDialog.setTabOrder(self.logTree, self.messageEdit)
        SvnLogBrowserDialog.setTabOrder(self.messageEdit, self.filesTree)
        SvnLogBrowserDialog.setTabOrder(self.filesTree, self.nextButton)
        SvnLogBrowserDialog.setTabOrder(self.nextButton, self.limitSpinBox)
        SvnLogBrowserDialog.setTabOrder(self.limitSpinBox, self.stopCheckBox)
        SvnLogBrowserDialog.setTabOrder(self.stopCheckBox, self.diffPreviousButton)
        SvnLogBrowserDialog.setTabOrder(self.diffPreviousButton, self.diffRevisionsButton)
        SvnLogBrowserDialog.setTabOrder(self.diffRevisionsButton, self.buttonBox)
        SvnLogBrowserDialog.setTabOrder(self.buttonBox, self.clearRxEditButton)

    def retranslateUi(self, SvnLogBrowserDialog):
        SvnLogBrowserDialog.setWindowTitle(_translate("SvnLogBrowserDialog", "Subversion Log", None))
        self.label.setText(_translate("SvnLogBrowserDialog", "From:", None))
        self.fromDate.setToolTip(_translate("SvnLogBrowserDialog", "Enter the start date", None))
        self.label_2.setText(_translate("SvnLogBrowserDialog", "To:", None))
        self.toDate.setToolTip(_translate("SvnLogBrowserDialog", "Enter the end date", None))
        self.fieldCombo.setToolTip(_translate("SvnLogBrowserDialog", "Select the field to filter on", None))
        self.fieldCombo.setItemText(0, _translate("SvnLogBrowserDialog", "Revision", None))
        self.fieldCombo.setItemText(1, _translate("SvnLogBrowserDialog", "Author", None))
        self.fieldCombo.setItemText(2, _translate("SvnLogBrowserDialog", "Message", None))
        self.rxEdit.setToolTip(_translate("SvnLogBrowserDialog", "Enter the regular expression to filter on", None))
        self.logTree.setSortingEnabled(True)
        self.logTree.headerItem().setText(0, _translate("SvnLogBrowserDialog", "Revision", None))
        self.logTree.headerItem().setText(1, _translate("SvnLogBrowserDialog", "Author", None))
        self.logTree.headerItem().setText(2, _translate("SvnLogBrowserDialog", "Date", None))
        self.logTree.headerItem().setText(3, _translate("SvnLogBrowserDialog", "Message", None))
        self.filesTree.setSortingEnabled(True)
        self.filesTree.headerItem().setText(0, _translate("SvnLogBrowserDialog", "Action", None))
        self.filesTree.headerItem().setText(1, _translate("SvnLogBrowserDialog", "Path", None))
        self.filesTree.headerItem().setText(2, _translate("SvnLogBrowserDialog", "Copy from", None))
        self.filesTree.headerItem().setText(3, _translate("SvnLogBrowserDialog", "Copy from Rev", None))
        self.nextButton.setToolTip(_translate("SvnLogBrowserDialog", "Press to get the next bunch of log entries", None))
        self.nextButton.setText(_translate("SvnLogBrowserDialog", "&Next", None))
        self.limitSpinBox.setToolTip(_translate("SvnLogBrowserDialog", "Enter the limit of entries to fetch", None))
        self.stopCheckBox.setToolTip(_translate("SvnLogBrowserDialog", "Select to stop listing log messages at a copy or move", None))
        self.stopCheckBox.setText(_translate("SvnLogBrowserDialog", "Stop on Copy/Move", None))
        self.diffPreviousButton.setToolTip(_translate("SvnLogBrowserDialog", "Press to generate a diff to the previous revision", None))
        self.diffPreviousButton.setText(_translate("SvnLogBrowserDialog", "&Diff to Previous", None))
        self.diffRevisionsButton.setToolTip(_translate("SvnLogBrowserDialog", "Press to compare two revisions", None))
        self.diffRevisionsButton.setText(_translate("SvnLogBrowserDialog", "&Compare Revisions", None))

